#*************************************************
# 賭け事_ﾘｽﾄ_4_成功回数の標準化
#*************************************************
import numpy as np
import math
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
%matplotlib inline

# 二項分布の確率質量関数
def fBinominal(n, p, k):
    return fCombinaton(n,k) * ((p)**k) * ((1-p)**(n-k))

# 組合せ nCr
def fCombinaton(n, r):
    return  math.factorial(n) // \
           (math.factorial(n - r) * math.factorial(r))


# 標準化確率変数 Z の分布
def fStdNormalDist(xlist, xn, p):
    mu = xn * p
    sigma = xn * p * (1.0 - p) 
    zlist = []
    plist = []
    for x in xlist:
        z = (x - mu) / sigma
        zlist.append( z )
        plist.append( fBinominal(xn, p, x) )

    return zlist, plist

# パラメータに応じた分布計算
xn = 60     # 賭け回数
xlist = range(xn+1)

# p1
p1 = 0.3
label1 = 'p={0}'.format(p1)
zlist1, plist1 = fStdNormalDist(xlist, xn, p1)

# p2
p2 = 0.5
label2 = 'p={0}'.format(p2)
zlist2, plist2 = fStdNormalDist(xlist, xn, p2)

# p3
p3 = 0.7
label3 = 'p={0}'.format(p3)
zlist3, plist3 = fStdNormalDist(xlist, xn, p3)

# グラフ描画
xlabel = '$z$'.format(xn)
ylabel = '$P(z)$'
title = 'Binominal distribution : Standardised (N={0})'.format(xn)

plt.figure(figsize=(8,4))
plt.plot( zlist1, plist1, 'r:', linewidth=2, label=label1 )
plt.plot( zlist2, plist2, 'b:', linewidth=2, label=label2 )
plt.plot( zlist3, plist3, 'g-.', linewidth=2, label=label3 )
plt.title(title)
plt.legend(loc='upper left')
plt.ylim(-0.05, 0.15)
plt.xlim(-1.0, 1.0)
plt.xlabel(xlabel)
plt.ylabel(ylabel)
plt.grid(True)
plt.show()