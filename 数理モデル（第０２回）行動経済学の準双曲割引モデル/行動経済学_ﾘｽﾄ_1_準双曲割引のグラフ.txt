#*******************************************************************
# 行動経済学_ﾘｽﾄ_1_準双曲割引のグラフ
#*******************************************************************
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
%matplotlib inline

#===================================================================
# 準双曲割引（quasi-hyperbolic discounting）モデルの割引関数
# 0 ＜ beta  ≦ 1　：現在バイアスパラメータβ
# 0 ＜ delta ≦ 1　：長期時間割引因子δ
#===================================================================
def f_QuasiHyperbolic(beta, delta, taulist):
  ylist = []
  for t in taulist :
    if t == 0:
      y = 1
    else:
      y = beta * (delta ** t)
    ylist.append( y )
  return ylist

#===================================================================
# （現在バイアスパラメータβ、長期時間割引因子δ）の組合せを変更
#===================================================================
# 計算対象の期間
tn = 40 
taulist = []
for tau in range(tn+1):
  taulist.append( tau )

# 現在バイアスパラメータβ
betalist = []
betalist.append( 1.0 )
betalist.append( 0.7 )
betalist.append( 0.5 )

# 長期時間割引因子δ
deltalist = []
deltalist.append( 0.7 )
deltalist.append( 0.8 )
deltalist.append( 0.9 )
deltalist.append( 0.97 )

# グラフ描画時の軸名
xlabel = 'term'
ylabel = 'quasi-hyperbolic discounting'

# 現在バイアスパラメータβについての繰り返し
for beta in betalist :

  # (β、δ) 組合せ1
  label1 = 'beta={0}, delta={1}'.format(beta, deltalist[0])
  ylist1 = f_QuasiHyperbolic(beta, deltalist[0], taulist)

  # (β、δ) 組合せ2
  label2 = 'beta={0}, delta={1}'.format(beta, deltalist[1])
  ylist2 = f_QuasiHyperbolic(beta, deltalist[1], taulist)

  # (β、δ) 組合せ3
  label3 = 'beta={0}, delta={1}'.format(beta, deltalist[2])
  ylist3 = f_QuasiHyperbolic(beta, deltalist[2], taulist)

  # (β、δ) 組合せ4
  label4 = 'beta={0}, delta={1}'.format(beta, deltalist[3])
  ylist4 = f_QuasiHyperbolic(beta, deltalist[3], taulist)

  # グラフ描画
  plt.figure(figsize=(6,2.7))
  plt.plot( taulist, ylist1, linewidth=2, label=label1, linestyle="solid", color="red" )
  plt.plot( taulist, ylist2, linewidth=2, label=label2, linestyle="dashed", color="blue" )
  plt.plot( taulist, ylist3, linewidth=2, label=label3, linestyle="dotted", color="green" )
  plt.plot( taulist, ylist4, linewidth=2, label=label4, linestyle="dashdot", color="turquoise" )
  plt.legend(loc='upper right')
  plt.ylim(-0.0, 1.0)
  plt.xlim(0, tn)
  plt.xlabel(xlabel)
  plt.ylabel(ylabel)
  plt.grid(True)
  plt.show()
